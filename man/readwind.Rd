% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wind.R
\name{readwind}
\alias{readwind}
\title{readwind}
\usage{
readwind(date, time.resolution = c("6hourly"), xylim = NULL,
  lon180 = TRUE, magonly = FALSE, dironly = FALSE, uonly = FALSE,
  vonly = FALSE, latest = FALSE, returnfiles = FALSE, ...,
  inputfiles = NULL)
}
\arguments{
\item{date}{date or dates of data to read, see Details}

\item{time.resolution}{time resolution to read}

\item{xylim}{crop}

\item{lon180}{Pacific or Atlantic}

\item{magonly}{return just the magnitude from the U and V
components}

\item{dironly}{return just the direction from the U and V, in degrees N=0, E=90, S=180, W=270}

\item{uonly}{return just the horizontal component of velocity, U}

\item{vonly}{return just the vertical component of velocity, V}

\item{latest}{if TRUE return the latest time available, ignoring the 'date' argument}

\item{returnfiles}{ignore options and just return the file names and dates}

\item{...}{arguments passed to \code{\link[raster]{brick}}, i.e. \code{filename}}

\item{inputfiles}{input the files data base to speed up initialization}
}
\value{
raster object
}
\description{
Read wind
}
\details{
Read wind data

The \code{inputfiles} argument may be used to speed up individual reads, see the examples. Note that 
this must then ignore the \code{time.resolution} argument, which is also set by \code{windfiles} - and no
warning is given.  If using this argument you must give the same \code{time.resolution} as was used to create the files
\code{data.frame}.
}
\examples{
# Speed up individual read calls. 
ff <- windfiles(time.resolution = "6hourly")
t1 <- system.time({readwind(max(ff$date))})
t2 <- system.time({readwind(max(ff$date), inputfiles = ff)})
\dontrun{
 dts <- seq(as.Date("2000-01-01"), by = "1 days", length = 350)
 library(animation)
 ani.start(ani.width = 800, ani.height = 800)
 for (i in seq_along(dts)) {
    x <- readwind(dts[i]);
    if (i == 1L) crds <- coordinates(x[[1]])
    plot(sqrt(x[[1]]^2 + x[[2]]^2), xlim = c(40, 180), ylim = c(-90, -20));
x1 <- crds[,1]
y1 <- crds[,2]
x2 <- crds[,1] + values(x[[1]])/4
y2 <- crds[,2] + values(x[[2]])/4
    arrows(x1, y1, x2, y2, length = 0.06);
    plot(m, add = TRUE)
}
ani.stop()



}
}
