% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ice.R
\name{readice}
\alias{readice}
\title{Read data from sea ice data products.}
\usage{
readice(date, time.resolution = "daily", product = "nsidc",
  hemisphere = c("south", "north"), xylim = NULL, setNA = TRUE,
  rescale = TRUE, latest = FALSE, returnfiles = FALSE, ...,
  inputfiles = NULL)
}
\arguments{
\item{date}{date or dates of data to read, see Details}

\item{time.resolution}{time resoution data to read, daily or monthly}

\item{product}{choice of sea ice product, see Details}

\item{hemisphere}{north or south}

\item{xylim}{spatial extents to crop from source data, can be anything accepted by \code{\link[raster]{extent}}}

\item{setNA}{mask zero and values greater than 100 as NA}

\item{rescale}{rescale values from integer range?}

\item{latest}{if TRUE return the latest time available, ignoring the 'date' argument}

\item{returnfiles}{ignore options and just return the file names and dates}

\item{...}{passed to brick, primarily for \code{filename}}

\item{inputfiles}{input the files data base to speed up initialization}

\item{extension}{default for product "amsr" is "hdf" but can be "tif" , extension = "hdf"}
}
\value{
\code{\link[raster]{raster}} object
}
\description{
Sea ice data is read from files managed by \code{\link{icefiles}}.
}
\details{
Currently available products are

\describe{
\item{'nsidc'}{daily or monthly NSIDC concentration data, processed by the SMMR/SSMI NASA Team}
}

Dates are matched to file names by finding the nearest match in
time within a short duration. If \code{date} is greater than
length 1 then the sorted set of unique matches is returned.

For NSIDC data a \code{\link[raster]{ratify}}ied raster is returned if \code{setNA} and 
\code{rescale} are both set to \code{FALSE}.  Use \code{levels(x)} to return the data.frame of values 
and levels (there's no straight-through rule, all numeric values are explicit along with special
values like "Unused"). 
The values used are documented here \url{http://nsidc.org/data/docs/daac/nsidc0051_gsfc_seaice.gd.html}
}
\examples{
\dontrun{
# library(raadtools)
# 
# ice <- readice(product = "amsr", latest = TRUE)
# 
# sensor <- "MODISA"
# ocf <- ocfiles(product = sensor, varname = "RRS")
# 
# library(roc)
# rrs <- readL3(ocf$fullname[nrow(ocf)])
# chl <- chla(rrs, algo = "johnson", sensor = sensor)/rrs$weights
# 
# library(rgdal)
# pxy <- project(do.call(cbind, bin2lonlat(rrs$bin_num, rrs$NUMROWS)), projection(ice))
# 
# par(bg = grey(0))
# ##plot(ice, col = grey(seq(0, 0.9, length = 100)), axes = FALSE, legend = FALSE)
# plot(ice, col = "transparent", axes = FALSE, legend = FALSE)
# points(pxy, cex = 0.1, pch = 16, col = chl.pal(chl))
# 
# n <- 14
# ss <-  rev( 1/((1:n)^.3))
# 
# for (i in 1:n) {
#   rrs <- readL3(ocf$fullname[nrow(ocf) - i])
#   chl <- chla(rrs, algo = "johnson", sensor = sensor)/rrs$weights
#   ice <- readice(ocf$date[nrow(ocf) - i], product = "amsr")
#   xy <- do.call(cbind, bin2lonlat(rrs$bin_num, rrs$NUMROWS))
#   asub <- xy[,2] < -38
#   pxy <- project(xy[asub, ], projection(ice))
#   points(pxy, cex = 0.2, pch = 16, col = chl.pal(chl[asub], alpha = 1/(i + 0.1)))
#   contour(ice, lev = 15, col =  rgb(1, 1, 1, alpha = 0.2, add = TRUE, lwd = 1.3)
# }  
}
}
\seealso{
\code{\link{icefiles}} for details on the repository of
data files, \code{\link[raster]{raster}} for the return value
}
